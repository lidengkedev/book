(self.webpackChunkbook=self.webpackChunkbook||[]).push([[926],{3292:(e,l,i)=>{"use strict";i.r(l),i.d(l,{data:()=>t});const t={key:"v-0a26e0a8",path:"/guide/js/seo/pseudo-static.html",title:"伪静态",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"什么是伪静态？",slug:"什么是伪静态",children:[]},{level:2,title:"伪静态的利与弊",slug:"伪静态的利与弊",children:[]}],filePathRelative:"guide/js/seo/pseudo-static.md",git:{updatedTime:null,contributors:[]}}},6:(e,l,i)=>{"use strict";i.r(l),i.d(l,{default:()=>a});const t=(0,i(6252).uE)('<h1 id="伪静态" tabindex="-1"><a class="header-anchor" href="#伪静态" aria-hidden="true">#</a> 伪静态</h1><h2 id="什么是伪静态" tabindex="-1"><a class="header-anchor" href="#什么是伪静态" aria-hidden="true">#</a> 什么是伪静态？</h2><p>伪静态就是网站本身是动态网页，转换成类似于静态的网页。如.php、.asp、.aspx等格式动态网页有时这类动态网页地址后跟“?”加参数来读取数据库内不同资料。</p><blockquote><p>伪静态作用</p></blockquote><p>很典型的案例即是discuz论坛系统，后台就有一个设置伪静态功能，开启伪静态后，动态网页即被转换重写成静态网页类型页面，通过浏览器访问地址和真的静态页面没区别。</p><p>前提服务器支持伪静态重写URL Rewrite功能。</p><blockquote><p>需要伪静态功能地方</p></blockquote><p>考虑搜索引擎优化SEO，将动态网页通过服务器处理成静态页面，如www.xxx.com/jk/fd.php?=12这样的动态网页处理成www.xxx.com/jk-fd-12.html这样格式静态页面，常见的论坛帖子页面，都是经过伪静态处理成静态页面格式html页面。</p><p>考虑网站所用的程序语言不易被发现，经过重写来伪静态来将动态网页的程序后缀变为html的静态页面格式。</p><h2 id="伪静态的利与弊" tabindex="-1"><a class="header-anchor" href="#伪静态的利与弊" aria-hidden="true">#</a> 伪静态的利与弊</h2><p>当然犹如一篇文章的作者所说的：&quot;如果流量稍大一些使用伪静态就出现CPU使用超负荷，我的同时在线300多人就挂了，而不使用伪静态的时候同时在线超500人都不挂，我的IIS数是1000。”</p><p>确实是这样的，由于伪静态是用正则判断而不是真实地址，分辨到底显示哪个页面的责任也由直接指定转由CPU来判断了，所以CPU占有量的上升，确实是伪静态最大的弊病。</p><p>我们应该选择伪静态还是真静态？</p><ol><li>使用真静态和假静态对SEO来说没有什么区别</li><li>使用真静态可能将导致硬盘损坏并将影响论坛性能</li><li>使用伪静态将占用一定量的CPU占有率，大量使用将导致CPU超负荷</li><li>最重要的一点，我们要静态是为了SEO</li></ol><p>所以</p><ol><li>使用真静态的方法可以直接排除了，因为无论怎么生成，对硬盘来说都是很伤的。</li><li>既然真伪静态的效果一样，我们就可以选择伪静态了。</li><li>但是伪静态大量使用会造成CPU超负荷。</li><li>所以我们只要不大量使用就可以了。</li><li>既然静态只是给SEO看的，我们只需要伪静态给SEO就行了，不需要给用户使用。</li><li>所以我们只要在专门提供给SEO爬的Archiver中使用伪静态就可以了。</li></ol><p>真正的静态化和伪静态还是有本质的区别的。</p><p>为浏览用户处理一个纯粹htm和一个调用多个数据的php在CPU的使用率方面明显前者少。</p>',18),a={render:function(e,l){return t}}}}]);